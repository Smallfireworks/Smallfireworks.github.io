<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Small_fireworks的小站</title>
        <link>https://smallfireworks.github.io/post/</link>
        <description>Recent content in Posts on Small_fireworks的小站</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>Small_fireworks</copyright>
        <lastBuildDate>Sun, 03 Aug 2025 22:12:00 +0800</lastBuildDate><atom:link href="https://smallfireworks.github.io/post/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>AI对话（测试中）</title>
        <link>https://smallfireworks.github.io/p/ai%E5%AF%B9%E8%AF%9D%E6%B5%8B%E8%AF%95%E4%B8%AD/</link>
        <pubDate>Sun, 03 Aug 2025 22:12:00 +0800</pubDate>
        
        <guid>https://smallfireworks.github.io/p/ai%E5%AF%B9%E8%AF%9D%E6%B5%8B%E8%AF%95%E4%B8%AD/</guid>
        <description>&lt;p&gt;这是一个AI对话系统，你可以在下面的输入框中输入你的问题，系统会根据你的问题进行回复。此外，査老师的数据集已作为其知识库。

&lt;div id=&#34;teacher-chat-app&#34; data-base-url=&#34;https://smallfireworks.github.io/teachers/data/&#34; data-assets-url=&#34;https://smallfireworks.github.io/teachers/chat/assets/&#34; data-api-base=&#34;https://your-worker.example.workers.dev&#34;&gt;&lt;div class=&#34;chat-container&#34;&gt;&lt;div class=&#34;chat-header&#34;&gt;&lt;h2&gt;AI 对话（教师与课程助手）&lt;/h2&gt;&lt;div class=&#34;chat-mode&#34;&gt;&lt;label&gt;模式：&lt;select id=&#34;chatMode&#34;&gt;&lt;option value=&#34;auto&#34; selected&gt;智能（自动实体识别）&lt;/option&gt;&lt;option value=&#34;teacher&#34;&gt;优先老师&lt;/option&gt;&lt;option value=&#34;course&#34;&gt;优先课程/GPA&lt;/option&gt;&lt;/select&gt;&lt;/label&gt;&lt;label class=&#34;toggle&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;showCitations&#34; checked /&gt;&lt;span&gt;显示证据片段&lt;/span&gt;&lt;/label&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;chatMessages&#34; class=&#34;chat-messages&#34; aria-live=&#34;polite&#34;&gt;&lt;/div&gt;&lt;div class=&#34;chat-input&#34;&gt;&lt;textarea id=&#34;chatInput&#34; placeholder=&#34;请输入问题，例如：张三老师的数据结构给分如何？&#34; rows=&#34;2&#34;&gt;&lt;/textarea&gt;&lt;button id=&#34;sendBtn&#34; aria-label=&#34;发送&#34;&gt;发送&lt;/button&gt;&lt;/div&gt;&lt;div class=&#34;chat-footer&#34;&gt;&lt;small&gt;注：回答尽量基于教师库/评论/GPA数据；对不确定的信息会明确说明。&lt;/small&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;https://smallfireworks.github.io/teachers/chat/assets/chat.css&#34; /&gt;&lt;script src=&#34;https://smallfireworks.github.io/teachers/chat/assets/chat.js&#34; defer&gt;&lt;/script&gt;
&lt;/p&gt;
</description>
        </item>
        <item>
        <title>査老师（离线版）</title>
        <link>https://smallfireworks.github.io/p/%E6%9F%BB%E8%80%81%E5%B8%88%E7%A6%BB%E7%BA%BF%E7%89%88/</link>
        <pubDate>Wed, 30 Jul 2025 21:38:00 +0800</pubDate>
        
        <guid>https://smallfireworks.github.io/p/%E6%9F%BB%E8%80%81%E5%B8%88%E7%A6%BB%E7%BA%BF%E7%89%88/</guid>
        <description>&lt;p&gt;完成了査老师（离线版）的制作，我的博客也是有用起来了。&lt;a class=&#34;link&#34; href=&#34;https://smallfireworks.github.io/%e6%9f%bb%e8%80%81%e5%b8%88%28%e7%a6%bb%e7%ba%bf%e7%89%88%29.html&#34; &gt;html版査老师&lt;/a&gt;，点击即可查看，但加载缓慢，不建议使用，可以直接使用下面的。&lt;br&gt;
&lt;div id=&#34;teacher-search-app&#34; role=&#34;application&#34; aria-label=&#34;教师查询系统&#34; data-base-url=&#34;https://smallfireworks.github.io/teachers/data/&#34; data-assets-url=&#34;https://smallfireworks.github.io/teachers/assets/&#34;&gt;&lt;div class=&#34;search-container&#34;&gt;&lt;div class=&#34;search-input-wrapper&#34;&gt;&lt;input type=&#34;text&#34; id=&#34;searchInput&#34; placeholder=&#34;按 姓名 / 拼音 / 首字母 搜索...&#34; aria-label=&#34;搜索教师&#34; autocomplete=&#34;off&#34; /&gt;&lt;button id=&#34;clearSearch&#34; class=&#34;clear-btn hidden&#34; aria-label=&#34;清空搜索框&#34; title=&#34;清空&#34;&gt;×&lt;/button&gt;&lt;/div&gt;&lt;div class=&#34;dept-dropdown-container&#34;&gt;&lt;input type=&#34;text&#34; id=&#34;departmentInput&#34; placeholder=&#34;按学院筛选...&#34; aria-label=&#34;筛选学院&#34; autocomplete=&#34;off&#34; /&gt;&lt;div id=&#34;departmentDropdown&#34; class=&#34;dept-dropdown hidden&#34; role=&#34;listbox&#34; aria-label=&#34;学院列表&#34;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;teacher-list&#34; aria-live=&#34;polite&#34; role=&#34;region&#34;&gt;&lt;p class=&#34;initial-message&#34;&gt;请输入教师姓名、拼音或选择学院以开始查询。&lt;/p&gt;&lt;/div&gt;&lt;footer class=&#34;page-footer&#34;&gt;&lt;p&gt;© 2025 by Small fireworks. For offline backup and reference only.&lt;/p&gt;&lt;p&gt;注：评分、热度及GPA等指标来源于原始数据文件，仅供参考。&lt;/p&gt;&lt;/footer&gt;&lt;/div&gt;&lt;div id=&#34;modal-container&#34; class=&#34;modal-hidden&#34; aria-hidden=&#34;true&#34;&gt;&lt;/div&gt;&lt;button id=&#34;back-to-top&#34; class=&#34;hidden&#34; aria-label=&#34;返回顶部&#34; title=&#34;返回顶部&#34;&gt;▲&lt;/button&gt;&lt;link rel=&#34;stylesheet&#34; href=&#34;https://smallfireworks.github.io/teachers/assets/style.css&#34; /&gt;&lt;script src=&#34;https://smallfireworks.github.io/teachers/assets/script.js&#34; defer&gt;&lt;/script&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>关于git</title>
        <link>https://smallfireworks.github.io/p/%E5%85%B3%E4%BA%8Egit/</link>
        <pubDate>Tue, 29 Jul 2025 13:47:00 +0800</pubDate>
        
        <guid>https://smallfireworks.github.io/p/%E5%85%B3%E4%BA%8Egit/</guid>
        <description>&lt;h3 id=&#34;核心概念&#34;&gt;&lt;strong&gt;核心概念&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;在开始之前，我们需要了解两个基本概念（以下皆以github为例）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;本地仓库 (Local Repository):&lt;/strong&gt; 这是你计算机上存储项目代码的文件夹。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;远程仓库 (Remote Repository):&lt;/strong&gt; 这是托管在 GitHub 服务器上的项目代码版本。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们的目标是将这两个仓库链接起来，以便你可以将本地的更改推送到 GitHub，或者从 GitHub 上拉取他人的更改。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;将本地文件夹链接到-github-仓库教程&#34;&gt;&lt;strong&gt;将本地文件夹链接到 GitHub 仓库教程&lt;/strong&gt;
&lt;/h2&gt;&lt;p&gt;本教程将引导你完成将本地项目文件夹与你的 GitHub 仓库连接的完整过程。&lt;/p&gt;
&lt;h3 id=&#34;第一步初始化本地仓库&#34;&gt;&lt;strong&gt;第一步：初始化本地仓库&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;首先，你需要在你的本地项目文件夹中初始化一个新的 Git 仓库。直接在所在文件夹路径栏输入cmd打开命令行工具即可。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;命令:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git init
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;解释:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git init&lt;/code&gt; 命令会在你当前的文件夹中创建一个名为 &lt;code&gt;.git&lt;/code&gt; 的隐藏子文件夹。&lt;/li&gt;
&lt;li&gt;这个 &lt;code&gt;.git&lt;/code&gt; 文件夹包含了 Git 仓库运行所需的所有元数据和对象数据库。&lt;/li&gt;
&lt;li&gt;可以把这个步骤看作是“激活”你文件夹的 Git 功能，让 Git 开始追踪这个文件夹里的文件变化。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;第二步创建并添加文件到暂存区&#34;&gt;&lt;strong&gt;第二步：创建并添加文件到暂存区&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;接下来，你需要告诉 Git 你想要追踪哪些文件。GitHub 的示例代码中创建了一个 &lt;code&gt;README.md&lt;/code&gt; 文件，这是一个很好的起点，因为它可以用来向其他人介绍你的项目。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;命令:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;# 你的项目名称&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; README.md
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add README.md  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;解释:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;echo &amp;quot;# 你的项目名称&amp;quot; &amp;gt;&amp;gt; README.md&lt;/code&gt; 这行命令会创建一个名为 &lt;code&gt;README.md&lt;/code&gt; 的文件，并在其中写入 &lt;code&gt;# 你的项目名称&lt;/code&gt; 这行内容。&lt;code&gt;#&lt;/code&gt; 在 Markdown 语法中表示一级标题。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git add README.md&lt;/code&gt; 命令会将 &lt;code&gt;README.md&lt;/code&gt; 文件添加到 Git 的&lt;strong&gt;暂存区 (Staging Area)&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;暂存区是一个中间区域，它记录了你下次想要提交到仓库的文件快照。 你可以多次使用 &lt;code&gt;git add&lt;/code&gt; 将不同的文件添加到暂存区，然后一次性提交它们。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;第三步提交更改到本地仓库&#34;&gt;&lt;strong&gt;第三步：提交更改到本地仓库&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;一旦你将文件添加到了暂存区，你就可以将它们&lt;strong&gt;提交 (Commit)&lt;/strong&gt; 到你的本地仓库了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;命令:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;first commit&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;解释:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git commit&lt;/code&gt; 命令会将在暂存区的文件永久地保存到你的本地仓库的 &lt;code&gt;.git&lt;/code&gt; 文件夹中。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-m &amp;quot;first commit&amp;quot;&lt;/code&gt; 是一个提交信息 (Commit Message)。 每次提交都应该附带一个有意义的提交信息，用来描述这次提交做了哪些更改。好的提交信息对于团队协作和回顾项目历史至关重要。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;第四步重命名默认分支&#34;&gt;&lt;strong&gt;第四步：重命名默认分支&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;为了与当前行业标准保持一致，建议将默认分支命名为 &lt;code&gt;main&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;命令:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git branch -M main
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;解释:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git branch&lt;/code&gt; 命令可以用来创建、列出或删除分支。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-M&lt;/code&gt; 选项是 &lt;code&gt;-m --force&lt;/code&gt; 的简写，它会强制将当前分支重命名为 &lt;code&gt;main&lt;/code&gt;。 如果 &lt;code&gt;main&lt;/code&gt; 分支已经存在，它也会被覆盖。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;第五步连接到远程仓库&#34;&gt;&lt;strong&gt;第五步：连接到远程仓库&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;现在，你需要告诉你的本地仓库远程仓库的地址。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;命令:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git remote add origin https://github.com/your-username/your-repository.git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;解释:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git remote add&lt;/code&gt; 命令用于添加一个新的远程仓库。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;origin&lt;/code&gt; 是你为这个远程仓库起的一个别名。这是一个通用的惯例，用来指代你项目的主要远程仓库。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;https://github.com/your-username/your-repository.git&lt;/code&gt; 是你的远程仓库的 URL。请将其替换成你自己在 GitHub 上创建的仓库地址。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;第六步将本地更改推送到远程仓库&#34;&gt;&lt;strong&gt;第六步：将本地更改推送到远程仓库&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;最后一步，将你本地的 &lt;code&gt;main&lt;/code&gt; 分支上的所有提交推送到 GitHub 上的 &lt;code&gt;origin&lt;/code&gt; 远程仓库。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;命令:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push -u origin main  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;解释:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git push&lt;/code&gt; 命令用于将本地仓库的提交上传到远程仓库。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;origin&lt;/code&gt; 指的是你要推送到的远程仓库的别名。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;main&lt;/code&gt; 指的是你要推送的本地分支。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt; 选项 (或者 &lt;code&gt;--set-upstream&lt;/code&gt;) 会在你的本地 &lt;code&gt;main&lt;/code&gt; 分支和远程 &lt;code&gt;origin/main&lt;/code&gt; 分支之间建立一个跟踪关系。 这样设置之后，你未来再进行推送时，只需要简单地使用 &lt;code&gt;git push&lt;/code&gt; 即可，Git 会自动知道你要推送到哪里。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;完成以上所有步骤后，你的本地项目文件夹就已经成功链接到了你的 GitHub 仓库。现在你可以在本地进行修改、添加新文件、提交更改，然后使用 &lt;code&gt;git push&lt;/code&gt; 将这些更改同步到 GitHub 上。&lt;/p&gt;
&lt;h2 id=&#34;git-日常提交操作教程&#34;&gt;&lt;strong&gt;Git 日常提交操作教程&lt;/strong&gt;
&lt;/h2&gt;&lt;p&gt;在你的本地仓库与 GitHub 远程仓库成功链接之后，日常工作流程通常是：&lt;strong&gt;修改文件 -&amp;gt; 添加到暂存区 -&amp;gt; 提交到本地仓库 -&amp;gt; 推送到远程仓库&lt;/strong&gt;。下面将根据不同情况，详细介绍操作步骤。&lt;/p&gt;
&lt;h3 id=&#34;核心概念回顾&#34;&gt;&lt;strong&gt;核心概念回顾&lt;/strong&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;工作区 (Working Directory):&lt;/strong&gt; 你在电脑上能看到的项目文件夹，可以直接在里面修改文件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;暂存区 (Staging Area):&lt;/strong&gt; 一个临时存放你下次想要提交的文件修改的区域。使用 &lt;code&gt;git add&lt;/code&gt; 命令将工作区的修改放入暂存区。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;本地仓库 (Local Repository):&lt;/strong&gt; 保存了项目所有提交历史的地方，位于你的 &lt;code&gt;.git&lt;/code&gt; 文件夹中。使用 &lt;code&gt;git commit&lt;/code&gt; 将暂存区的内容提交到这里。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;远程仓库 (Remote Repository):&lt;/strong&gt; 托管在 GitHub 上的项目版本。使用 &lt;code&gt;git push&lt;/code&gt; 将本地仓库的提交同步到远程仓库。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;情况一提交所有本地更改&#34;&gt;&lt;strong&gt;情况一：提交所有本地更改&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;这是最常见的情况。你对项目做了多处修改，想要一次性将所有变动（包括新增、修改和删除的文件）都提交。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;场景示例：&lt;/strong&gt; 你修改了 &lt;code&gt;README.md&lt;/code&gt;，同时在项目中新建了一个 &lt;code&gt;new-file.txt&lt;/code&gt; 文件。&lt;/p&gt;
&lt;h4 id=&#34;操作步骤&#34;&gt;&lt;strong&gt;操作步骤&lt;/strong&gt;
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;查看状态 (可选但推荐)&lt;/strong&gt;
在进行任何提交前，先检查一下当前仓库的状态是一个好习惯。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;命令:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git status
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;解释:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这个命令会列出所有被修改过的、新创建但未被追踪的（untracked）文件。这能帮助你确认将要提交的内容。&lt;/li&gt;
&lt;li&gt;你会看到 &lt;code&gt;README.md&lt;/code&gt; 显示为 &lt;code&gt;modified&lt;/code&gt;，&lt;code&gt;new-file.txt&lt;/code&gt; 显示为 &lt;code&gt;untracked&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;添加所有更改到暂存区&lt;/strong&gt;
使用 &lt;code&gt;.&lt;/code&gt; 代表当前目录下的所有更改。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;命令:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add .
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;解释:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git add .&lt;/code&gt; 是一个非常方便的命令，它会自动将工作区中所有的新增、修改和删除操作都添加到暂存区。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;提交到本地仓库&lt;/strong&gt;
为这次提交添加一个清晰的描述信息。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;命令:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;你的提交信息&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;解释:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-m&lt;/code&gt; 后面的字符串是本次提交的说明 (Commit Message)。清晰的说明对于日后回顾代码历史至关重要。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;推送到 GitHub&lt;/strong&gt;
将本地的提交同步到远程仓库。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;命令:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;解释:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;因为在初次链接时你已经使用了 &lt;code&gt;-u&lt;/code&gt; 参数设置了上游分支 (upstream)，所以之后你不再需要指定 &lt;code&gt;origin main&lt;/code&gt;，直接使用 &lt;code&gt;git push&lt;/code&gt; 即可。Git 会自动将当前分支的提交推送到与之关联的远程分支。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;情况二只提交特定文件&#34;&gt;&lt;strong&gt;情况二：只提交特定文件&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;有时候你可能只完成了某几个文件的修改，不想把其他还在进行中的工作也一并提交。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;场景示例：&lt;/strong&gt; 你同时修改了 &lt;code&gt;file_A.md&lt;/code&gt; 和 &lt;code&gt;file_B.md&lt;/code&gt;，但这次只想提交 &lt;code&gt;file_A.md&lt;/code&gt; 的修改。&lt;/p&gt;
&lt;h4 id=&#34;操作步骤-1&#34;&gt;&lt;strong&gt;操作步骤&lt;/strong&gt;
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;查看状态 (可选但推荐)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git status
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;你会看到 &lt;code&gt;file_A.md&lt;/code&gt; 和 &lt;code&gt;file_B.md&lt;/code&gt; 都被列为 &lt;code&gt;modified&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;添加指定文件到暂存区&lt;/strong&gt;
明确指定要添加的文件名。可以一次添加多个。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;命令:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add file_A.md
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;或者如果要一次添加多个指定文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add file_A.md another_file.js
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;解释:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git add &amp;lt;文件名&amp;gt;&lt;/code&gt; 命令会将指定的文件放入暂存区，而其他文件（如此处的 &lt;code&gt;file_B.md&lt;/code&gt;）则会保持在工作区的修改状态，不会被包含在这次提交中。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;提交到本地仓库&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;你的提交信息&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sb&#34;&gt;```&lt;/span&gt;    **解释:**
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*   这次提交将只包含 &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;file_A.md&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt; 的快照。
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;推送到 GitHub&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;情况三提交特定文件夹内的所有更改&#34;&gt;&lt;strong&gt;情况三：提交特定文件夹内的所有更改&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;当你按功能或模块组织文件时，可能需要一次性提交某个文件夹内的所有变动。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;场景示例：&lt;/strong&gt; 你的项目有一个 &lt;code&gt;assets/images/&lt;/code&gt; 文件夹，你在里面新增和修改了多张图片，希望只提交这个图片文件夹的变动。&lt;/p&gt;
&lt;h4 id=&#34;操作步骤-2&#34;&gt;&lt;strong&gt;操作步骤&lt;/strong&gt;
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;查看状态 (可选但推荐)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git status
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;检查 &lt;code&gt;assets/images/&lt;/code&gt; 文件夹下的文件是否都已正确显示为已修改或未追踪。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;添加指定文件夹到暂存区&lt;/strong&gt;
指定文件夹的路径。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;命令:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add assets/images/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;解释:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git add &amp;lt;文件夹路径&amp;gt;&lt;/code&gt; 会递归地将该文件夹下的所有新增、修改和删除的文件都添加到暂存区。&lt;/li&gt;
&lt;li&gt;注意，文件夹路径后面的 &lt;code&gt;/&lt;/code&gt; 可加可不加，效果相同。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;提交到本地仓库&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;你的提交信息&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;解释:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;本次提交将包含 &lt;code&gt;assets/images/&lt;/code&gt; 文件夹内的所有变动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;推送到 GitHub&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过掌握这几种提交方式，你就可以灵活地管理你的项目版本，保持提交历史的清晰和整洁。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;疑难解答解决网络问题导致的&#34;&gt;&lt;strong&gt;疑难解答：解决网络问题导致的 &lt;code&gt;push&lt;/code&gt; 失败&lt;/strong&gt;
&lt;/h2&gt;&lt;p&gt;当你熟练掌握了日常提交操作后，在执行 &lt;code&gt;git push&lt;/code&gt; 时，有时可能会遇到网络连接相关的错误，即使你的浏览器可以正常访问 GitHub。本章节将帮助你诊断并解决这类问题。&lt;/p&gt;
&lt;h3 id=&#34;问题现象常见的连接错误&#34;&gt;&lt;strong&gt;问题现象：常见的连接错误&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;如果你在命令行中看到以下任何一条报错信息，那么你很可能遇到了网络问题：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;error: RPC failed&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; curl &lt;span class=&#34;m&#34;&gt;55&lt;/span&gt; Send failure: Connection was reset
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fatal: the remote end hung up unexpectedly
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fatal: unable to access &lt;span class=&#34;s1&#34;&gt;&amp;#39;https://github.com/your-username/your-repo.git/&amp;#39;&lt;/span&gt;: Recv failure: Connection was reset
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fatal: unable to access &lt;span class=&#34;s1&#34;&gt;&amp;#39;https://github.com/your-username/your-repo.git/&amp;#39;&lt;/span&gt;: Failed to connect to github.com port 443...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;问题根源git-与系统代理&#34;&gt;&lt;strong&gt;问题根源：Git 与系统代理&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;这个问题的核心原因通常是：&lt;strong&gt;命令行中的 Git 工具默认不会自动使用你电脑的系统代理设置。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;你的浏览器&lt;/strong&gt;：&lt;code&gt;请求&lt;/code&gt; -&amp;gt; &lt;code&gt;识别并使用系统代理&lt;/code&gt; -&amp;gt; &lt;code&gt;成功访问 GitHub&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;你的 Git&lt;/strong&gt;： &lt;code&gt;请求&lt;/code&gt; -&amp;gt; &lt;code&gt;尝试直接连接 (未使用代理)&lt;/code&gt; -&amp;gt; &lt;code&gt;连接超时或被重置，访问 GitHub 失败&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当 Git 无法通过直接连接访问远程服务器时，就会产生上述错误。&lt;/p&gt;
&lt;h3 id=&#34;解决方案为-git-手动配置代理&#34;&gt;&lt;strong&gt;解决方案：为 Git 手动配置代理&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;要解决这个问题，我们只需要明确地告诉 Git 使用哪个代理服务来连接网络即可。&lt;/p&gt;
&lt;h4 id=&#34;第一步找到你的代理端口号&#34;&gt;&lt;strong&gt;第一步：找到你的代理端口号&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;首先，你需要从你的代理软件（如 Clash, V2RayN, Shadowsocks 等）的设置界面中，找到它提供的 &lt;strong&gt;HTTP/HTTPS 代理端口&lt;/strong&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这通常在软件的“通用设置”或“端口设置”页面。&lt;/li&gt;
&lt;li&gt;常见的端口号有 &lt;code&gt;7890&lt;/code&gt;, &lt;code&gt;7897&lt;/code&gt;, &lt;code&gt;1080&lt;/code&gt; 等。&lt;/li&gt;
&lt;li&gt;代理服务器地址通常是 &lt;code&gt;127.0.0.1&lt;/code&gt;，这是一个指向你电脑本身的固定地址 (也叫 &lt;code&gt;localhost&lt;/code&gt;)。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在下面的示例中，我们统一假设查到的代理端口号是 &lt;code&gt;7890&lt;/code&gt;。&lt;strong&gt;在实际操作时，请务必将其替换为你自己查到的端口号。&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;第二步选择一种配置方式&#34;&gt;&lt;strong&gt;第二步：选择一种配置方式&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;我们提供两种推荐的配置方式，你可以根据自己的需求选择。&lt;/p&gt;
&lt;hr&gt;
&lt;h5 id=&#34;方式一临时代理单次命令推荐&#34;&gt;&lt;strong&gt;方式一：临时代理（单次命令，推荐）&lt;/strong&gt;
&lt;/h5&gt;&lt;p&gt;如果你只是偶尔需要代理，或者不想修改任何全局配置，这是最干净、最灵活的方法。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;命令:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git -c &lt;span class=&#34;s2&#34;&gt;&amp;#34;http.proxy=http://127.0.0.1:7890&amp;#34;&lt;/span&gt; -c &lt;span class=&#34;s2&#34;&gt;&amp;#34;https.proxy=http://127.0.0.1:7890&amp;#34;&lt;/span&gt; push
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;解释:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt; 参数的作用是为&lt;strong&gt;当前这一条 Git 命令&lt;/strong&gt;临时指定一个配置。&lt;/li&gt;
&lt;li&gt;这条命令执行完毕后，代理设置会立即失效，不会对你的系统产生任何永久性影响，非常适合一次性使用。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h5 id=&#34;方式二全局代理一劳永逸&#34;&gt;&lt;strong&gt;方式二：全局代理（一劳永逸）&lt;/strong&gt;
&lt;/h5&gt;&lt;p&gt;如果你长期在需要代理的网络环境下工作，为 Git 设置一个全局代理会更加方便。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;命令:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 为 Git 设置 HTTP 代理&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global http.proxy http://127.0.0.1:7890
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 为 Git 设置 HTTPS 代理&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global https.proxy http://127.0.0.1:7890
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;解释:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--global&lt;/code&gt; 参数表示这个配置对你电脑上&lt;strong&gt;所有&lt;/strong&gt;的 Git 仓库都会生效。&lt;/li&gt;
&lt;li&gt;设置完成后，所有需要联网的 Git 命令（如 &lt;code&gt;push&lt;/code&gt;, &lt;code&gt;pull&lt;/code&gt;, &lt;code&gt;clone&lt;/code&gt;）都会自动通过这个代理进行。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;如何取消全局代理？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当你更换到无需代理的网络环境时（例如，在公司内网），可以使用以下命令轻松地清除之前的全局代理设置。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;命令:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global --unset http.proxy
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global --unset https.proxy
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;通过以上方法，你就可以从容应对因网络环境导致的 &lt;code&gt;git push&lt;/code&gt; 失败问题了。&lt;/p&gt;
&lt;h2 id=&#34;专题处理大文件与-git-lfs&#34;&gt;&lt;strong&gt;专题：处理大文件与 Git LFS&lt;/strong&gt;
&lt;/h2&gt;&lt;p&gt;在推送代码时，你可能会遇到一个特殊的警告，提示你仓库中的某个文件体积过大。这是 Git 和 GitHub 为了保证仓库性能而设置的限制。本章节将详细解释这个问题，并提供官方推荐的解决方案：Git LFS。&lt;/p&gt;
&lt;h3 id=&#34;问题现象large-files-detected-警告&#34;&gt;&lt;strong&gt;问题现象：“Large files detected” 警告&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;当你执行 &lt;code&gt;git push&lt;/code&gt; 后，如果看到类似下面的警告信息，就说明你遇到了大文件问题：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;remote: warning: File assets/videos/demo-video.mp4 is 72.63 MB&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; this is larger than GitHub&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;s recommended maximum file size of 50.00 MB
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;remote: warning: GH001: Large files detected. You may want to try Git Large File Storage - https://git-lfs.github.com.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;问题根源：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Git 的设计初衷&lt;/strong&gt;：Git 是为管理文本文件（如源代码）而设计的，它通过记录每次的文本变动来工作。对于二进制大文件（如视频、设计稿、数据集、压缩包等），Git 无法有效处理其“增量”变化，每次修改都会在历史记录中几乎完整地存一份新的副本。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;仓库性能&lt;/strong&gt;：随着大文件的不断添加和修改，你的 &lt;code&gt;.git&lt;/code&gt; 文件夹会迅速膨胀。这会导致克隆 (&lt;code&gt;git clone&lt;/code&gt;) 和拉取 (&lt;code&gt;git pull&lt;/code&gt;) 仓库变得异常缓慢，严重影响协作效率。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GitHub 的限制&lt;/strong&gt;：GitHub 建议单个文件不要超过 50MB，并会阻止超过 100MB 的文件推送。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;解决方案git-lfs-large-file-storage&#34;&gt;&lt;strong&gt;解决方案：Git LFS (Large File Storage)&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;Git LFS 是一个 Git 扩展，专门用于优雅地处理仓库中的大文件。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;工作原理：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当你使用 Git LFS 追踪一个大文件时，Git 不再将文件本身存储在 &lt;code&gt;.git&lt;/code&gt; 历史中。&lt;/li&gt;
&lt;li&gt;取而代之的是，它将大文件上传到一个专门的 LFS 服务器（例如 GitHub 的 LFS 存储空间）上。&lt;/li&gt;
&lt;li&gt;在你的 Git 仓库中，那个大文件会被替换成一个轻量级的“指针文件”（Pointer File）。这个指针文件是一个小小的文本文件，里面记录了如何从 LFS 服务器上下载回真正的大文件。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;好处：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;仓库保持轻量&lt;/strong&gt;：你的 Git 仓库体积不会因为大文件而膨胀。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;历史记录清爽&lt;/strong&gt;：克隆和拉取速度飞快，因为大家下载的只是代码和轻量级的指针文件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;无缝集成&lt;/strong&gt;：对于使用者来说，日常的 &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;commit&lt;/code&gt;, &lt;code&gt;push&lt;/code&gt; 等操作几乎没有变化，Git LFS 在后台自动完成所有繁重工作。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;如何使用-git-lfs实践指南&#34;&gt;&lt;strong&gt;如何使用 Git LFS：实践指南&lt;/strong&gt;
&lt;/h3&gt;&lt;h4 id=&#34;第一步安装-git-lfs-客户端&#34;&gt;&lt;strong&gt;第一步：安装 Git LFS 客户端&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;这是一个一次性的步骤。你需要先在你的电脑上安装 Git LFS。你可以从官方网站 &lt;strong&gt;&lt;a class=&#34;link&#34; href=&#34;https://git-lfs.github.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;git-lfs.github.com&lt;/a&gt;&lt;/strong&gt; 下载并安装它。&lt;/p&gt;
&lt;h4 id=&#34;第二步在你的仓库中启用-git-lfs&#34;&gt;&lt;strong&gt;第二步：在你的仓库中启用 Git LFS&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;进入你的本地项目文件夹，运行以下命令。这个命令只需要对每个需要使用 LFS 的仓库执行一次。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;命令:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git lfs install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;解释:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;该命令会初始化 Git LFS，并在你的 &lt;code&gt;.git/hooks&lt;/code&gt; 目录中设置一些钩子，以便它能自动拦截和处理大文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;第三步追踪track大文件&#34;&gt;&lt;strong&gt;第三步：追踪（Track）大文件&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;现在，你需要告诉 Git LFS 你希望由它来管理哪些文件或文件类型。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;命令:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 示例：追踪所有 .zip 文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git lfs track &lt;span class=&#34;s2&#34;&gt;&amp;#34;*.zip&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 示例：追踪某个特定的大文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git lfs track &lt;span class=&#34;s2&#34;&gt;&amp;#34;assets/data/large-dataset.csv&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 示例：追踪某个文件夹下的所有文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git lfs track &lt;span class=&#34;s2&#34;&gt;&amp;#34;assets/videos/*&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;解释:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git lfs track&lt;/code&gt; 命令会创建或修改一个名为 &lt;code&gt;.gitattributes&lt;/code&gt; 的文件。&lt;/li&gt;
&lt;li&gt;这个文件记录了 LFS 的追踪规则，它本身也必须被添加到 Git 仓库中，以确保所有协作者都能遵循相同的规则。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;第四步提交&#34;&gt;&lt;strong&gt;第四步：提交 &lt;code&gt;.gitattributes&lt;/code&gt; 文件&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;命令:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add .gitattributes
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;Configure Git LFS to track large files&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;至此，你的仓库已经配置好了。&lt;/strong&gt; 从现在起，任何符合追踪规则的新增或修改的大文件都会被 Git LFS 自动处理。你可以像操作普通文件一样 &lt;code&gt;git add&lt;/code&gt; 和 &lt;code&gt;git commit&lt;/code&gt; 它们，然后 &lt;code&gt;git push&lt;/code&gt; 即可。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;特别情况迁移已存在于历史记录中的大文件&#34;&gt;&lt;strong&gt;特别情况：迁移已存在于历史记录中的大文件&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;如果你在配置 LFS &lt;strong&gt;之前&lt;/strong&gt;就已经提交过大文件（正如“问题现象”中的场景），那么仅仅开始追踪是不够的。那个大文件依然“藏”在你的历史记录里。你需要一个额外的步骤来清理历史。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;警告：&lt;/strong&gt; 以下操作会&lt;strong&gt;重写&lt;/strong&gt;你仓库的提交历史。在执行前，请确保你的分支上没有其他人在工作，或者已经和协作者同步了情况。&lt;/p&gt;
&lt;h4 id=&#34;操作步骤-3&#34;&gt;&lt;strong&gt;操作步骤&lt;/strong&gt;
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;确保你已完成上述 LFS 的安装和追踪设置&lt;/strong&gt; (&lt;code&gt;install&lt;/code&gt; 和 &lt;code&gt;track&lt;/code&gt; 命令)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;使用 &lt;code&gt;migrate&lt;/code&gt; 命令迁移历史&lt;/strong&gt;：
这个命令会检查整个历史记录，并将符合条件的文件转换为 LFS 指针。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;命令:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# --include 指定要迁移的文件或模式&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git lfs migrate import --include&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;assets/videos/demo-video.mp4&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;强制推送到远程仓库&lt;/strong&gt;：
因为历史已被重写，你不能再使用普通的 &lt;code&gt;git push&lt;/code&gt;。你需要用 &lt;code&gt;--force&lt;/code&gt; 来覆盖远程仓库的历史。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;命令:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push --force
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;设置-lfs-后的日常工作流程&#34;&gt;&lt;strong&gt;设置 LFS 后的日常工作流程&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;一旦你的仓库正确配置了 LFS（无论是新项目还是迁移过的旧项目），日常工作将变得非常简单。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;场景：如何更新或替换一个由 LFS 管理的大文件？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;答案：和操作普通文件完全一样！&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;在你的文件夹里&lt;/strong&gt;：直接用新文件覆盖旧文件，或者删除旧文件再放入新文件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;添加更改到暂存区&lt;/strong&gt;：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add path/to/your/large-file.zip
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;提交更改&lt;/strong&gt;：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;Update large file to version 2.0&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;推送到远程仓库&lt;/strong&gt;：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Git LFS 会在后台自动处理指针的更新和新文件的上传，你完全无需关心其中的复杂细节。&lt;/p&gt;
&lt;p&gt;好的，遵照您的要求，我将这一系列的问答和解决方案整合成一个连贯的、全新的教程章节，您可以将其添加到之前内容的末尾。&lt;/p&gt;
&lt;h2 id=&#34;高级专题在-github-pages-上正确使用-git-lfs&#34;&gt;&lt;strong&gt;高级专题：在 GitHub Pages 上正确使用 Git LFS&lt;/strong&gt;
&lt;/h2&gt;&lt;p&gt;当你开始使用 Git LFS 管理大文件后，可能会在将网站部署到 GitHub Pages 时遇到一个棘手的问题：指向大文件的链接失效了，页面上只显示一串奇怪的文本。本章节将深入剖析这个问题，并提供在自动化部署流程中解决该问题的最佳实践。&lt;/p&gt;
&lt;h3 id=&#34;问题现象lfs-文件在线上网站显示为指针&#34;&gt;&lt;strong&gt;问题现象：LFS 文件在线上网站显示为“指针”&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;场景：&lt;/strong&gt;
你已经成功地使用 &lt;code&gt;git lfs track&lt;/code&gt; 命令来追踪一个大文件（例如一个离线版 HTML 网页、一个高清视频或一个 PDF 文档）。在本地，一切工作正常。但是，当你通过 GitHub Actions 自动部署到 GitHub Pages 后，点击网站上指向该文件的链接，看到的不是文件内容，而是类似下面的一段文本：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;version https://git-lfs.github.com/spec/v1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;oid sha256:b4c274dca1c32bc555260155af103e10f2471014ee20808347c808fa13ee60b2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;size 76160947
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;根本原因部署工作流不认识lfs-文件&#34;&gt;&lt;strong&gt;根本原因：部署工作流“不认识”LFS 文件&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;这个问题的核心在于，你的自动化部署流程（GitHub Actions）在执行时，默认并不会去下载 LFS 跟踪的大文件。&lt;/p&gt;
&lt;p&gt;让我们来梳理一下错误的流程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;代码检出 (Checkout)&lt;/strong&gt;：当你的 GitHub Actions 工作流开始运行时，它使用 &lt;code&gt;actions/checkout&lt;/code&gt; 步骤来获取你仓库的代码。默认情况下，这个步骤&lt;strong&gt;只会下载 LFS 的指针文件&lt;/strong&gt;（就是你看到的那段文本），而不会下载存储在 LFS 服务器上的真实大文件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;网站构建 (Build)&lt;/strong&gt;：接下来，你的网站构建工具（如 Hugo, Jekyll, Hexo 等）开始工作。但它拿到的不是真实的大文件，而是那个指针文件。于是，它就把这个&lt;strong&gt;指针文件当作了最终内容&lt;/strong&gt;，并将其打包到了最终的网站文件夹中（例如 &lt;code&gt;public&lt;/code&gt; 目录）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;网站部署 (Deploy)&lt;/strong&gt;：最后，工作流将这个包含了错误内容（指针文件）的 &lt;code&gt;public&lt;/code&gt; 文件夹推送到你的 GitHub Pages 仓库。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;结果就是，你的线上网站展示的自然就是那个指针文件，链接也就失效了。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;解决方案让你的工作流支持-lfs&#34;&gt;&lt;strong&gt;解决方案：让你的工作流支持 LFS&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;解决方案非常简单，只需在你的自动化部署工作流文件中，明确地告诉 &lt;code&gt;actions/checkout&lt;/code&gt; 步骤，在检出代码的同时也要下载 LFS 文件。&lt;/p&gt;
&lt;p&gt;这只需要添加一行配置：&lt;code&gt;lfs: true&lt;/code&gt;。&lt;/p&gt;
&lt;h4 id=&#34;操作指南&#34;&gt;&lt;strong&gt;操作指南&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;假设你已经有一个用于自动部署的 GitHub Actions 工作流文件，路径为 &lt;code&gt;.github/workflows/deploy.yaml&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第一步：找到你的部署工作流文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;打开你的项目，找到并编辑 &lt;code&gt;.github/workflows/deploy.yaml&lt;/code&gt; 文件。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第二步：修改 &lt;code&gt;actions/checkout&lt;/code&gt; 步骤&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在文件中找到名为 &lt;code&gt;Checkout&lt;/code&gt; 的步骤，它通常看起来像这样：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;修改前：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Checkout&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;actions/checkout@v4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;fetch-depth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 获取所有历史记录，以便Hugo等工具生成.Lastmod等信息&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;你所需要做的，就是在 &lt;code&gt;with:&lt;/code&gt; 下方&lt;strong&gt;添加一行 &lt;code&gt;lfs: true&lt;/code&gt;&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;修改后：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Checkout&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;actions/checkout@v4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;fetch-depth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;lfs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# &amp;lt;--- 添加这一行，指示工作流下载LFS跟踪的真实文件&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;第三步：保存并推送修改&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;将修改后的 &lt;code&gt;deploy.yaml&lt;/code&gt; 文件提交到你的仓库。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add .github/workflows/deploy.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;Fix: Enable LFS support in deployment workflow&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;完整示例一个修正后的跨仓库部署工作流&#34;&gt;&lt;strong&gt;完整示例：一个修正后的跨仓库部署工作流&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;以下是一个修正后的完整工作流示例，它从源仓库构建，然后部署到一个专门的 GitHub Pages 仓库（例如 &lt;code&gt;your-username.github.io&lt;/code&gt;）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# 文件路径: .github/workflows/deploy.yaml&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;deploy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 在代码推送到main分支时触发&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;branches&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;jobs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;deploy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;runs-on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ubuntu-latest&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;steps&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 1. 检出代码，并确保LFS文件被正确下载&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Checkout&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;actions/checkout@v4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;fetch-depth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;lfs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# &amp;lt;-- 关键的修改在这里！&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 2. 设置Hugo环境 (或其他构建工具)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Setup Hugo&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;peaceiris/actions-hugo@v3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;hugo-version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;latest&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;extended&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 3. 使用Hugo构建网站，此时它能找到真实的大文件了&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Build Web&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;hugo -D&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 4. 将构建好的网站部署到目标仓库&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Deploy Web&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;peaceiris/actions-gh-pages@v4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 使用仓库的 secrets 来安全地存储访问令牌&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;PERSONAL_TOKEN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;${{ secrets.YOUR_DEPLOY_TOKEN }}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 部署的目标仓库地址&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;EXTERNAL_REPOSITORY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;your-username/your-username.github.io&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 部署到目标仓库的哪个分支&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;PUBLISH_BRANCH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 需要部署的、已构建好的文件夹&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;PUBLISH_DIR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;./public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 自定义部署的提交信息&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;commit_message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;auto deploy from source repository&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;验证结果&#34;&gt;&lt;strong&gt;验证结果&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;在你推送了修改后的工作流文件后，GitHub Actions 会自动触发一次新的部署。等待部署完成后，刷新你的 GitHub Pages 网站，再次点击之前失效的链接。&lt;/p&gt;
&lt;p&gt;这一次，由于工作流在构建阶段已经正确下载了真实的大文件，你的网站上链接到的也会是这个真实文件，问题就此解决。你的 Git LFS 文件现在可以完美地在线上展示了。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>小说（测试中）</title>
        <link>https://smallfireworks.github.io/p/%E5%B0%8F%E8%AF%B4%E6%B5%8B%E8%AF%95%E4%B8%AD/</link>
        <pubDate>Tue, 22 Jul 2025 15:57:00 +0800</pubDate>
        
        <guid>https://smallfireworks.github.io/p/%E5%B0%8F%E8%AF%B4%E6%B5%8B%E8%AF%95%E4%B8%AD/</guid>
        <description>&lt;p&gt;把“&lt;a class=&#34;link&#34; href=&#34;https://smallfireworks.github.io/%e5%b0%8f%e8%af%b4.html&#34; &gt;小说&lt;/a&gt;”塞进来。点击即可查看。&lt;br&gt;
目前共24章。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>大年初三的那一夜(微恐)</title>
        <link>https://smallfireworks.github.io/p/%E5%A4%A7%E5%B9%B4%E5%88%9D%E4%B8%89%E7%9A%84%E9%82%A3%E4%B8%80%E5%A4%9C%E5%BE%AE%E6%81%90/</link>
        <pubDate>Tue, 01 Jul 2025 00:00:00 +0800</pubDate>
        
        <guid>https://smallfireworks.github.io/p/%E5%A4%A7%E5%B9%B4%E5%88%9D%E4%B8%89%E7%9A%84%E9%82%A3%E4%B8%80%E5%A4%9C%E5%BE%AE%E6%81%90/</guid>
        <description>&lt;p&gt;把之前搞的“&lt;a class=&#34;link&#34; href=&#34;https://smallfireworks.github.io/%e5%a4%a7%e5%b9%b4%e5%88%9d%e4%b8%89.html&#34; &gt;大年初三的那一夜&lt;/a&gt;”的故事的网页加入本博客。点击即可查看。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>初来乍到</title>
        <link>https://smallfireworks.github.io/p/%E5%88%9D%E6%9D%A5%E4%B9%8D%E5%88%B0/</link>
        <pubDate>Mon, 30 Jun 2025 22:10:41 +0800</pubDate>
        
        <guid>https://smallfireworks.github.io/p/%E5%88%9D%E6%9D%A5%E4%B9%8D%E5%88%B0/</guid>
        <description>&lt;p&gt;初来乍到，发一个高中的发现的定理。&lt;/p&gt;
&lt;h3 id=&#34;定理&#34;&gt;定理
&lt;/h3&gt;&lt;p&gt;设 \(p\) 为一个奇素数，\(a\) 为一个整数且 \(1 \le a &lt; p\)。记 \(N\) 为满足以下两个条件的整数 \(x\) 的数量：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;\(x\) 是模 \(p\) 的二次剩余。&lt;/li&gt;
&lt;li&gt;\(x-a\) 也是模 \(p\) 的二次剩余。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;其中 \(x\) 的取值范围是 \(\{1, 2, \dots, p-1\}\)。&lt;/p&gt;
&lt;p&gt;那么 \(N\) 的值可以根据 \(p\) 和 \(a\) 的性质确定：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;情况一：当 \(p \equiv 1 \pmod 4\)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;若 \(a\) 是模 \(p\) 的二次剩余，则 \(N = \frac{p-5}{4}\)。&lt;/li&gt;
&lt;li&gt;若 \(a\) 是模 \(p\) 的二次非剩余，则 \(N = \frac{p-1}{4}\)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;情况二：当 \(p \equiv 3 \pmod 4\)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无论 \(a\) 是二次剩余还是非剩余，均有 \(N = \frac{p-3}{4}\)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;证明&#34;&gt;证明
&lt;/h3&gt;&lt;p&gt;我们的核心工具是&lt;strong&gt;勒让德符号&lt;/strong&gt; \(\left(\frac{n}{p}\right)\)。对于 \(n \not\equiv 0 \pmod p\)，我们知道：
&lt;/p&gt;
\[
\frac{1 + \left(\frac{n}{p}\right)}{2} = 
\begin{cases} 
1 &amp; \text{如果 } n \text{ 是二次剩余} \\
0 &amp; \text{如果 } n \text{ 是二次非剩余}
\end{cases}
\]&lt;p&gt;利用这个性质，我们可以将 \(N\) 表示为一个和式。注意求和时需要排除 \(x=a\) 的情况，因为此时 \(x-a=0\)，不满足条件2。
&lt;/p&gt;
\[ N = \sum_{\substack{x=1 \\ x \ne a}}^{p-1} \left( \frac{1 + \left(\frac{x}{p}\right)}{2} \right) \left( \frac{1 + \left(\frac{x-a}{p}\right)}{2} \right) \]&lt;p&gt;为了简化计算，我们先计算一个相关的和 \(S\)，其求和范围为完整的 \(\{1, 2, \dots, p-1\}\)：
&lt;/p&gt;
\[ S = \sum_{x=1}^{p-1} \left( \frac{1 + \left(\frac{x}{p}\right)}{2} \right) \left( \frac{1 + \left(\frac{x-a}{p}\right)}{2} \right) \]&lt;p&gt;
展开得：
&lt;/p&gt;
\[ 4S = \sum_{x=1}^{p-1} \left( 1 + \left(\frac{x}{p}\right) + \left(\frac{x-a}{p}\right) + \left(\frac{x(x-a)}{p}\right) \right) \]&lt;p&gt;
&lt;/p&gt;
\[ 4S = \sum_{x=1}^{p-1} 1 + \sum_{x=1}^{p-1} \left(\frac{x}{p}\right) + \sum_{x=1}^{p-1} \left(\frac{x-a}{p}\right) + \sum_{x=1}^{p-1} \left(\frac{x(x-a)}{p}\right) \]&lt;p&gt;现在我们逐项计算这四个和：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;\(\sum_{x=1}^{p-1} 1 = p-1\)。&lt;/li&gt;
&lt;li&gt;\(\sum_{x=1}^{p-1} \left(\frac{x}{p}\right) = 0\)。 (在一个完整剩余系中，二次剩余与非剩余数量相等)&lt;/li&gt;
&lt;li&gt;\(\sum_{x=1}^{p-1} \left(\frac{x-a}{p}\right)\)。当 \(x\) 遍历 \(\{1, \dots, p-1\}\) 时，\(x-a\) 遍历 \(\{1-a, \dots, p-1-a\}\)，这个集合模 \(p\) 后恰好是 \(\{0, 1, \dots, p-1\}\) 中去掉了 \(-a\)。所以和为 \(\sum_{y=0}^{p-1}\left(\frac{y}{p}\right) - \left(\frac{-a}{p}\right) = 0 - \left(\frac{-a}{p}\right) = -\left(\frac{-a}{p}\right)\)。&lt;/li&gt;
&lt;li&gt;\(\sum_{x=1}^{p-1} \left(\frac{x(x-a)}{p}\right) = -1\)。这是一个经典的特征和结论。其简要证明如下：
\[ \sum_{x=1}^{p-1} \left(\frac{x(x-a)}{p}\right) = \sum_{x=1}^{p-1} \left(\frac{x^2(1-ax^{-1})}{p}\right) = \sum_{x=1}^{p-1} \left(\frac{1-ax^{-1}}{p}\right) \]
令 \(y = x^{-1}\)，当 \(x\) 遍历 \(\{1, \dots, p-1\}\) 时，\(y\) 也遍历该集合。上式变为：
\[ \sum_{y=1}^{p-1} \left(\frac{1-ay}{p}\right) \]
令 \(z = 1-ay\)，\(z\) 会遍历 \(\{1, \dots, p-1\}\) 中除 \(1\) 以外的所有元素。因此和为 \(\sum_{z=1}^{p-1}\left(\frac{z}{p}\right) - \left(\frac{1}{p}\right) = 0-1 = -1\)。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;将以上结果代入 \(4S\) 的表达式：
&lt;/p&gt;
\[ 4S = (p-1) + 0 - \left(\frac{-a}{p}\right) + (-1) = p - 2 - \left(\frac{-a}{p}\right) \]&lt;p&gt;和 \(S\) 包含了 \(x=a\) 这一项的贡献，而我们要求的 \(N\) 并不包含。当 \(x=a\) 时，\(\left(\frac{x-a}{p}\right) = 0\)，该项对 \(S\) 的贡献是：
&lt;/p&gt;
\[ \left( \frac{1 + \left(\frac{a}{p}\right)}{2} \right) \left( \frac{1 + 0}{2} \right) = \frac{1 + \left(\frac{a}{p}\right)}{4} \]&lt;p&gt;
所以，\(S = N + \frac{1 + \left(\frac{a}{p}\right)}{4}\)。由此可得 \(N\):
&lt;/p&gt;
\[ N = S - \frac{1 + \left(\frac{a}{p}\right)}{4} = \frac{p - 2 - \left(\frac{-a}{p}\right)}{4} - \frac{1 + \left(\frac{a}{p}\right)}{4} \]&lt;p&gt;
&lt;/p&gt;
\[ N = \frac{p - 3 - \left(\frac{a}{p}\right) - \left(\frac{-a}{p}\right)}{4} \]&lt;p&gt;这是 \(N\) 的通用表达式。现在我们分情况讨论：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;当 \(p \equiv 1 \pmod 4\)&lt;/strong&gt;，有 \(\left(\frac{-1}{p}\right) = 1\)，因此 \(\left(\frac{-a}{p}\right) = \left(\frac{a}{p}\right)\)。
&lt;/p&gt;
\[ N = \frac{p - 3 - 2\left(\frac{a}{p}\right)}{4} \]&lt;ul&gt;
&lt;li&gt;若 \(a\) 是二次剩余，\(\left(\frac{a}{p}\right)=1\)，则 \(N = \frac{p-3-2}{4} = \frac{p-5}{4}\)。&lt;/li&gt;
&lt;li&gt;若 \(a\) 是二次非剩余，\(\left(\frac{a}{p}\right)=-1\)，则 \(N = \frac{p-3+2}{4} = \frac{p-1}{4}\)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;当 \(p \equiv 3 \pmod 4\)&lt;/strong&gt;，有 \(\left(\frac{-1}{p}\right) = -1\)，因此 \(\left(\frac{-a}{p}\right) = -\left(\frac{a}{p}\right)\)。
&lt;/p&gt;
\[ N = \frac{p - 3 - \left(\frac{a}{p}\right) - (-\left(\frac{a}{p}\right))}{4} = \frac{p-3}{4} \]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所有情况均已得到验证。证明完毕。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
